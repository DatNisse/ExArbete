// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GameMessage.proto</summary>
public static partial class GameMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for GameMessage.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GameMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFHYW1lTWVzc2FnZS5wcm90byJTCgtHYW1lTWVzc2FnZRIQCghwbGF5ZXJJ",
          "ZBgBIAEoCRITCgttb3ZlX251bWJlchgCIAEoBRIMCgRtb3ZlGAMgASgJEg8K",
          "B2lzR3JlZXQYBCABKAhiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage), global::GameMessage.Parser, new[]{ "PlayerId", "MoveNumber", "Move", "IsGreet" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GameMessage : pb::IMessage<GameMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage(GameMessage other) : this() {
    playerId_ = other.playerId_;
    moveNumber_ = other.moveNumber_;
    move_ = other.move_;
    isGreet_ = other.isGreet_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage Clone() {
    return new GameMessage(this);
  }

  /// <summary>Field number for the "playerId" field.</summary>
  public const int PlayerIdFieldNumber = 1;
  private string playerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PlayerId {
    get { return playerId_; }
    set {
      playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "move_number" field.</summary>
  public const int MoveNumberFieldNumber = 2;
  private int moveNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MoveNumber {
    get { return moveNumber_; }
    set {
      moveNumber_ = value;
    }
  }

  /// <summary>Field number for the "move" field.</summary>
  public const int MoveFieldNumber = 3;
  private string move_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Move {
    get { return move_; }
    set {
      move_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "isGreet" field.</summary>
  public const int IsGreetFieldNumber = 4;
  private bool isGreet_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsGreet {
    get { return isGreet_; }
    set {
      isGreet_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerId != other.PlayerId) return false;
    if (MoveNumber != other.MoveNumber) return false;
    if (Move != other.Move) return false;
    if (IsGreet != other.IsGreet) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
    if (MoveNumber != 0) hash ^= MoveNumber.GetHashCode();
    if (Move.Length != 0) hash ^= Move.GetHashCode();
    if (IsGreet != false) hash ^= IsGreet.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayerId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PlayerId);
    }
    if (MoveNumber != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MoveNumber);
    }
    if (Move.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Move);
    }
    if (IsGreet != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsGreet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayerId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PlayerId);
    }
    if (MoveNumber != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MoveNumber);
    }
    if (Move.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Move);
    }
    if (IsGreet != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsGreet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PlayerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
    }
    if (MoveNumber != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveNumber);
    }
    if (Move.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Move);
    }
    if (IsGreet != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameMessage other) {
    if (other == null) {
      return;
    }
    if (other.PlayerId.Length != 0) {
      PlayerId = other.PlayerId;
    }
    if (other.MoveNumber != 0) {
      MoveNumber = other.MoveNumber;
    }
    if (other.Move.Length != 0) {
      Move = other.Move;
    }
    if (other.IsGreet != false) {
      IsGreet = other.IsGreet;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PlayerId = input.ReadString();
          break;
        }
        case 16: {
          MoveNumber = input.ReadInt32();
          break;
        }
        case 26: {
          Move = input.ReadString();
          break;
        }
        case 32: {
          IsGreet = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          PlayerId = input.ReadString();
          break;
        }
        case 16: {
          MoveNumber = input.ReadInt32();
          break;
        }
        case 26: {
          Move = input.ReadString();
          break;
        }
        case 32: {
          IsGreet = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
